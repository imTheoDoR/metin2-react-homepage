import Navbar from "@/components/admin/Navbar";
import Container from "@/components/elements/Container";
import fetcher from "@/helpers/fetcher";
import useCurrentUser from "@/hooks/useCurrentUser";
import isProtectedRoute from "@/middleware/isProtectedRoute";
import { GetServerSideProps, NextApiRequest, NextApiResponse } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import { FaGuilded, FaUserPlus, FaUsers } from "react-icons/fa";

interface Props {
    isAdmin: boolean;
}

export default function AdminDashboard() {
    const [totalPlayers, setTotalPlayers] = useState("");
    const [totalGuilds, setTotalGuilds] = useState("");
    const [totalAccounts, setTotalAccounts] = useState("");
    const [lastAccount, setLastAccount] = useState("");

    let title = process.env.NEXT_PUBLIC_APP_TITLE || "Metin2 Next.JS App developed by TheoDoR";
    let pageTitle = `${title} - Administration Page`;

    const currentUser = useCurrentUser();

    useEffect(() => {
        const fetchTotalPlayers = async () => {
            try {
                const getTotalPlayers = await fetcher("/api/getTotalPlayers");
                const getTotalGuilds = await fetcher("/api/getTotalGuilds");
                const getTotalAccounts = await fetcher("/api/getTotalAccounts");
                const getLastAccount = await fetcher("/api/getLastAccount");

                setTotalPlayers(getTotalPlayers.totalPlayers);
                setTotalGuilds(getTotalGuilds.totalGuilds);
                setTotalAccounts(getTotalAccounts.totalAccounts);
                setLastAccount(getLastAccount.lastAccount.login);
            } catch (error) {
                console.log("Total Players: fetching errors -> ", error);
            }
        };
        fetchTotalPlayers();
    }, []);

    return (
        <>
            <Head>
                <title>{pageTitle}</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div>
                <Container bgColor="bg-dark">
                    <div className="flex gap-5">
                        <Navbar />
                        <div className="py-3 max-w-[1200px] mx-auto">
                            <div className="text-2xl font-semibold">
                                Hello, <span className="text-gold mr-1">{currentUser?.data?.login}</span>!
                            </div>

                            {/* Some statistics */}
                            <div className="grid grid-cols-4 mt-5 gap-10">
                                <div className="flex">
                                    <FaUsers className="text-3xl bg-gold/30 text-gold h-full w-10 p-2" />
                                    <div className="bg-dark2 px-4 py-2 flex flex-col items-center text-base uppercase font-semibold w-full">
                                        Total players
                                        <span className="font-bold text-gold">
                                            {Number(totalPlayers).toLocaleString()}
                                        </span>
                                    </div>
                                </div>
                                <div className="flex">
                                    <FaGuilded className="text-3xl bg-gold/30 text-gold h-full w-10 p-2" />
                                    <div className="bg-dark2 px-4 py-2 flex flex-col items-center text-base uppercase font-semibold w-full">
                                        Total guilds
                                        <span className="font-bold text-gold">
                                            {Number(totalGuilds).toLocaleString()}
                                        </span>
                                    </div>
                                </div>
                                <div className="flex">
                                    <FaUserPlus className="text-3xl bg-gold/30 text-gold h-full w-10 p-2" />
                                    <div className="bg-dark2 px-4 py-2 flex flex-col items-center text-base uppercase font-semibold w-full">
                                        The newest register
                                        <span className="font-bold text-gold">{lastAccount}</span>
                                    </div>
                                </div>
                                <div className="flex">
                                    <FaUsers className="text-3xl bg-gold/30 text-gold h-full w-10 p-2" />
                                    <div className="bg-dark2 px-4 py-2 flex flex-col items-center text-base uppercase font-semibold w-full">
                                        Total accounts
                                        <span className="font-bold text-gold">
                                            {Number(totalAccounts).toLocaleString()}
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </Container>
            </div>
        </>
    );
}

export const getServerSideProps: GetServerSideProps<Props> = async (context) => {
    const req = context.req as NextApiRequest;
    const res = context.res as NextApiResponse;

    try {
        await isProtectedRoute(req, res, () => {
            return {
                props: {
                    isAdmin: true,
                },
            };
        });

        return {
            props: {
                isAdmin: true,
            },
        };
    } catch (error) {
        return {
            redirect: {
                destination: "/unauthorized",
                permanent: false,
            },
        };
    }
};
